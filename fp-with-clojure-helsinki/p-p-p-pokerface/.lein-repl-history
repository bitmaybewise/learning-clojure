(second "Hercules")
(use 'p-p-p-pokerface :reload)
(rank "AS")
(rank "$S")
(rank "4S")
(use 'p-p-p-pokerface :reload)
(rank "AS")
(rank "4S")
(Integer/valueOf \4)
(Integer/valueOf "4")
(use 'p-p-p-pokerface :reload)
(rank "4S")
(rank "AS")
(use 'p-p-p-pokerface :reload)
(frequencies (list 1 2 3 1 2))
(frequencies {1 2 3 1 2})
(frequencies [1 2 3 1 2])
(frequencies [])
(use 'p-p-p-pokerface :reload)
(frequencies [])
(use 'p-p-p-pokerface :reload)
(frequencies [])
(clojure.core/frequencies [])
(clojure.core/frequencies [1 2 3])
(clojure.core/frequencies [1 2 3 1 1])
(use 'p-p-p-pokerface :reload)
(frequencies [])
(p-p-p-pokerface/frequencies [])
quit
(frequencies [])
(frequencies [1 1 1])
(frequencies [1 1 1 2 3])
(use 'p-p-p-pokerface)
(frequencies [1 1 1 2 3])
(use 'p-p-p-pokerface :reload)
(frequencies [1 1 1 2 3])
(def pair-hand ["2H", "2S", "4C", "5C", "7D"])
(pair? pair-hand)
(doc contains?)
(frequencies [1 1 1 2 3])
(max (frequencies [1 1 1 2 3]))
(max (vals (frequencies [1 1 1 2 3])))
(apply max (vals (frequencies [1 1 1 2 3])))
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(use 'p-p-p-pokerface :reload)
(pair? pair-hand)
(def high-seven ["2H","3S", "4C", "5C", "7D"])
(pair? high-seven)
(use 'p-p-p-pokerface :reload)
(def flush-hand ["2H","4H","5H","9H","7H"])
flush-hand
(use 'p-p-p-pokerface :reload)
(flush? flush-hand)
(use 'p-p-p-pokerface :reload)
(flush? flush-hand)
(use 'p-p-p-pokerface :reload)
(flush? flush-hand)
(use 'p-p-p-pokerface :reload)
(flush? flush-hand)
(flush? high-seven)
(use 'p-p-p-pokerface :reload)
(flush? high-seven)
(flush? flush-hand)
quit
(contains? [1 2] 1)
(contains? [1 2] 2)
(contains? [1 2] 0)
(contains? '(1 2) 0)
(use 'p-p-p-pokerface :reload)
(full-house? [])
(def full-house-hand ["2H","5D","2D","2C","5S"])
(full-house? full-house-hand)
(def 32 (full-house? full-house-hand))
(some 3 '(2 3))
(full-house? full-house-hand)
(= '(3 2) '(3 2))
(= '(3 2) '(2 3))
(= (set 3 2) (set 2 3))
(set 1 2)
(apply set 1 2)
(set )
(set 1)
(set ())
(set (1 2))
(set '(1 2))
(= #{1 2} #{1 2})
(= #{1 2} #{2 1})
(full-house? full-house-hand)
(use 'p-p-p-pokerface :reload)
(full-house? full-house-hand)
(use 'p-p-p-pokerface :reload)
(two-pairs? full-house-hand)
(use 'p-p-p-pokerface :reload)
(two-pairs? full-house-hand)
(use 'p-p-p-pokerface :reload)
(two-pairs? full-house-hand)
(use 'p-p-p-pokerface :reload)
(two-pairs? full-house-hand)
(straight? full-house-hand)
(two-pairs? full-house-hand)
(use 'p-p-p-pokerface :reload)
(straight? full-house-hand)
(use 'p-p-p-pokerface :reload)
(straight? full-house-hand)
full-house-hand
(def straight-hand ["2H","3S","6C","5D","4D"])
straight-hand
(def straight-hand2 (replace {"6C" "AC"} straight-hand ))
straight-hand2
(straight? full-house-hand)
(straight? straight-hand)
(straight? straight-hand2)
(use 'p-p-p-pokerface :reload)
(straight? straight-hand2)
(straight? straight-hand)
(straight? full-house-hand)
(use 'p-p-p-pokerface :reload)
(straight? full-house-hand)
(straight? straight-hand)
(use 'p-p-p-pokerface :reload)
(straight? straight-hand)
(straight? straight-hand2)
(straight? straight-hand)
(straight? full-house-hand)
(use 'p-p-p-pokerface :reload)
(straight? full-house-hand)
(straight? straight-hand)
(straight? straight-hand2)
(use 'p-p-p-pokerface :reload)
(straight? straight-hand2)
(straight? straight-hand)
(straight? full-house-hand)
quit
(autotest)
(use 'midje.repl)
(autotest)
quit
(use 'midje.repl)
(doc midje)
(autotest)
y
yes
y
(autotest :resume)
(autotest)
(load-facts)
quit
(:use 'p-p-p-pokerface :reload)
(def straight-flush-hand ["2H" "3H" "6H" "5H" "4H"])
straight-flush-hand
(:use 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
straight-flush-hand
(straight-flush? straight-flush-hand)
frequencies [1 2]
(frequencies [1 2])
(frequencies [1 2 2 2])
(vals (frequencies [1 2 2 2]))
(frequencies [1 2 2 33])
(vals (frequencies [1 2 2 33]))
(set (vals (frequencies [1 2 2 33])))
(set (vals (frequencies [1 2 2 3 3])))
(vals (frequencies [1 2 2 3 3]))
(set (vals (frequencies [1 2 2 3 3])))
(:use 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(:require 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(:load 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(:use 'iloveponies.src.p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(:use p-p-p-pokerface :reload)
(:use `p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(:use 'iloveponies.src/p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
quit
(straight-flush? straight-flush-hand)
(def straight-flush-hand ["2H" "3H" "6H" "5H" "4H"])
(straight-flush-hand)
straight-flush-hand
(straight-flush? straight-flush-hand)
(:use 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(:use 'p-p-p-pokerface)
(straight-flush? straight-flush-hand)
(:use [p-p-p-pokerface])
(:use p-p-p-pokerface)
(:use p-p-p-pokerface :reload)
(:use 'p-p-p-pokerface :reload)
(use 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(def flush-hand                   ["2H" "4H" "5H" "9H" "7H"])
flush-hand
(straight-flush? flush-hand)
(def straight-hand                ["2H" "3S" "6C" "5D" "4D"])
(straight-flush? straight-hand)
(straight? straight-hand)
(straight? flush-hand)
(straight? straight-flush-hand)
(straight-flush? straight-flush-hand)
(use 'p-p-p-pokerface :reload)
(straight-flush? straight-flush-hand)
(straight? straight-flush-hand)
(flush? straight-flush-hand)
(use 'p-p-p-pokerface :reload)
(two-pairs? two-pairs-hand)
(def high-seven                   ["2H" "3S" "4C" "5C" "7D"])
(def pair-hand                    ["2H" "2S" "4C" "5C" "7D"])
(def two-pairs-hand               ["2H" "2S" "4C" "4D" "7D"])
(def three-of-a-kind-hand         ["2H" "2S" "2C" "4D" "7D"])
(def four-of-a-kind-hand          ["2H" "2S" "2C" "2D" "7D"])
(def straight-hand                ["2H" "3S" "6C" "5D" "4D"])
(def low-ace-straight-hand        ["2H" "3S" "4C" "5D" "AD"])
(def high-ace-straight-hand       ["TH" "AS" "QC" "KD" "JD"])
(def flush-hand                   ["2H" "4H" "5H" "9H" "7H"])
(def full-house-hand              ["2H" "5D" "2D" "2C" "5S"])
(def straight-flush-hand          ["2H" "3H" "6H" "5H" "4H"])
(def low-ace-straight-flush-hand  ["2D" "3D" "4D" "5D" "AD"])
(def high-ace-straight-flush-hand ["TS" "AS" "QS" "KS" "JS"])
high-seven
straight
straight-hand
pair-hand
(use 'p-p-p-pokerface :reload)
pair-hand
[1 2 2]
(set [1 2 2])
(= (set [1 2 2]) #{1 2})
(sort [1 2 2])
(= (sort [1 2 2]) [1 2 2])
quit
