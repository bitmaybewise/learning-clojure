(use 'structured-data)
(spiff [1 2 3])
(spiff [1 2])
(spiff [])
(use 'structured-data)
(cutify [1 2])
(use 'structured-data :reload)
(cutify [1 2])
(use 'structured-data :reload)
(spiff-destructuring [1 2 3])
(spiff-destructuring [1 5 3])
(spiff-destructuring [1 5])
(spiff-destructuring [1])
(use 'structured-data :reload)
(spiff-destructuring [1])
(spiff-destructuring [1 2 3])
(spiff-destructuring [1 2])
(use 'structured-data :reload)
(def r rectangle [[1 2] [3 4]]
)
(def r (rectangle [1 2] [3 4]))
r
(width r)
(height r)
(use 'structured-data :reload)
(height r)
(width r)
(use 'structured-data :reload)
(square? r)
(use 'structured-data :reload)
(area r)
(use 'structured-data :reload)
r
(contains-rectangle? r [])
(contains-rectangle? r [[1 2] [3 4]])
(contains-rectangle? r [[2 2] [3 4]])
(contains-rectangle? r [[2 2] [2 2]])
(contains-rectangle? r [[2 2] [2 5]])
(use 'structured-data :reload)
(title-length {:title "The book thief"})
(use 'structured-data :reload)
(add-author {:name "bla"} "eu")
(add-author {:name "bla"} ["eu"])
(use 'structured-data :reload)
(alive? {:name 'me'})
(alive? {:name 'me' :year 2014})
'(1 2 3)
(second '(1 2 3))
(next '(1 2 3))
(use 'structured-data :reload)
(second-elements [])
(second-elements [1 2])
(second-elements [[1 2] [2 3]])
(use 'structured-data :reload)
(second-elements [[1 2] [2 3]])
(use 'structured-data :reload)
(second-elements [[1 2] [2 3]])
(second-elements [[1 5] [2 6]])
(use 'structured-data :reload)
(stars 2)
(stars 10)
(use 'structured-data :reload)
(monotonic [1 2 3])
(monotonic? [1 2 3])
(monotonic? [1 4 3])
(monotonic? [5 4 3])
(use 'structured-data :reload)
(monotonic? [5 4 3])
(monotonic? [1 4 3])
(monotonic? [1 2 3])
(use 'structured-data :reload)
(contains-duplicates [1 2])
(contains-duplicates? [1 2])
(use 'structured-data :reload)
(contains-duplicates? [1 2])
(contains-duplicates? [1 1])
quit
(use 'structured-data)
(use 'structured-data :reload)
(old-book->new-book {:name "bla" :authors {"fulano" "cicrano" "fulano"}})
(doc set)
(use 'structured-data :reload)
(old-book->new-book {:name "bla" :authors {"fulano" "cicrano" "fulano"}})
(def little-schemer {:title "The Little Schemer"
                     :authors ["fulano" "cicrano" "fulano"]})
little-schemer
(old-book->new-book little-schemer)
(use 'structured-data :reload)
(authors [little-schemer])
(def book {:name "bla" :authors #{joao maria}})
(def book {:name "bla" :authors #{:joao :maria}})
(authors [book])
(use 'structured-data :reload)
book
(book->string book)
(use 'structured-data :reload)
(doc first)
(doc find)
(use 'structured-data :reload)
(def china {:name "China" :birth-year 1900})
(def book {:name "Book" :authors #{china}})
book
(book->string book)
(def book {:title "Book" :authors #{china}})
(book->string book)
(books->string book)
(books->string [book])
(books->string [book, book])
(use 'structured-data :reload)
(books->string [book, book])
quit
